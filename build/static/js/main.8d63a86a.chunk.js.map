{"version":3,"sources":["component/UI/card.js","component/components/ExpensesFilter.js","component/components/ExpenseDate.js","component/components/ExpenseItem.js","component/components/ExpensesList.js","component/Chart/ChartBar.js","component/Chart/Chart.js","component/components/ExpensesChart.js","component/components/Expenses.js","component/NewExpense/ExpenseForm.js","component/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","saveFilteredYearHandler","target","ExpenseDate","day","dummyDates","toLocaleString","month","year","getFullYear","ExpenseItem","date","title","amount","ExpensesList","dummyExpenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","valuePerMonth","dataList","dataPerMonth","totalMax","max","dataForBar","ExpensesChart","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","dummyItems","filter","toString","selectedYear","ExpenseForm","newTitle","setNewTitle","newAmount","setNewAmount","newDate","setNewDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","newExpenseData","random","saveNewExpense","dummy_data","App","setExpense","newExpense","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d63a86a.chunk.js","sourcesContent":["import './card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className \r\n  \r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card","import './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const filteredYearHandler = (event) => {\r\n    props.saveFilteredYearHandler(event.target.value);\r\n  };\r\n\r\n  return(\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select   value={props.selected}   onChange={filteredYearHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const day =props.dummyDates.toLocaleString('en-US',{day:\"2-digit\"});\r\n  const month =props.dummyDates.toLocaleString('en-US',{month:\"long\"});\r\n  const year =props.dummyDates.getFullYear();\r\n  return(\r\n   <div className='date-style'> \r\n     <div className='expense-date__month'>{month}</div>\r\n     <div className='expense-date__year'>{year}</div>\r\n     <div className='expense-date__day'>{day}</div>\r\n   </div> \r\n  );\r\n};\r\nexport default ExpenseDate;","import ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return(\r\n    <li >\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate dummyDates={props.date}/>\r\n        <div className='expense-item__description'>\r\n          <h2 >{props.title}</h2>\r\n          <div className='expense-item__price'>{props.amount} $</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\nexport default ExpenseItem;","import ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.dummyExpenses.length === 0) {\r\n    return <h2 className='expense-list-empty' >Found no expenses. </h2>;\r\n  }\r\n\r\n  return(\r\n    <ul className='expense-list'>\r\n      {props.dummyExpenses.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title ={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n    ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;","import './ChartBar.css'\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n      barFillHeight = Math.round((props.value/props.maxValue)*100) + '%';\r\n    }\r\n\r\n  return(\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{height:barFillHeight}}></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChartBar;","import ChartBar from \"./ChartBar\";\r\nimport './Chart.css'\r\n\r\nconst Chart = (props) => {\r\n  const valuePerMonth = props.dataList.map(dataPerMonth => dataPerMonth.value);\r\n  const totalMax = Math.max (...valuePerMonth);\r\n\r\n\r\n  return(\r\n    <div className='chart'>\r\n      {props.dataList.map(dataForBar => (\r\n        <ChartBar\r\n          key = {dataForBar.label}\r\n          label = {dataForBar.label}\r\n          value = {dataForBar.value}\r\n          maxValue = {totalMax}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const dataPerMonth = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n  for(const expense of props.dummyExpenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    dataPerMonth[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return<Chart dataList = {dataPerMonth}/>;  \r\n};\r\n\r\nexport default ExpensesChart;","import { useState } from \"react\";\r\n\r\nimport Card from '../UI/card';\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear,setFilteredYear] = useState('2020');\r\n\r\n  const saveFilteredYear = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  }\r\n  const filteredExpenses = props.dummyItems.filter((expense)=>{\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  \r\n  return(\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          saveFilteredYearHandler={saveFilteredYear}\r\n        />\r\n        <ExpensesChart dummyExpenses={filteredExpenses} />\r\n        <ExpensesList dummyExpenses={filteredExpenses}/>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses; ","import { useState } from \"react\";\r\nimport './ExpenseForm.css';\r\nconst ExpenseForm = (props) => {\r\n  const [newTitle,setNewTitle] = useState('');\r\n  const [newAmount,setNewAmount] = useState('');\r\n  const [newDate,setNewDate] = useState('');\r\n\r\n  const titleChangeHandler = (event)=> {\r\n    setNewTitle(event.target.value);\r\n  }\r\n  \r\n  const amountChangeHandler = (event)=> {\r\n    setNewAmount(event.target.value);\r\n  }\r\n\r\n  const dateChangeHandler = (event)=> {\r\n    setNewDate(event.target.value);\r\n  }\r\n   const SubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n     const expenseData = {\r\n        title: newTitle,\r\n        amount: newAmount,\r\n        date : new Date(newDate),\r\n     };\r\n\r\n\r\n     props.onSaveExpenseData(expenseData)\r\n     setNewTitle ('');\r\n     setNewAmount('');\r\n     setNewDate('');\r\n\r\n\r\n    };\r\n     \r\n    return(\r\n      <form onSubmit={SubmitHandler}>\r\n        <div className='new-expense__controls'>\r\n          <div className='new-expense__control'>\r\n            <label>Title</label>\r\n            <input\r\n              type='text'\r\n              value={newTitle}\r\n              onChange = {titleChangeHandler}\r\n            />\r\n         </div>\r\n         <div className='new-expense__control'>\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              value={newAmount}\r\n              onChange = {amountChangeHandler}\r\n            />\r\n         </div>\r\n         <div className='new-expense__control'>\r\n           <label>Date</label>\r\n           <input\r\n             type=\"date\"\r\n             min='2019-01-01'\r\n             max='2022-12-31'\r\n             value={newDate}\r\n             onChange = {dateChangeHandler}\r\n            />\r\n         </div>\r\n        </div>\r\n        <div className='new-expense__actions'>\r\n          <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n);\r\n};\r\n\r\nexport default ExpenseForm;","import { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport Card from \"../UI/card\";\r\nimport './NewExpense.css';\r\nconst NewExpense = (props) => {\r\n  const [isEditing,setIsEditing] = useState(false);\r\n\r\n  const savingExpenseDataHandler = (newExpenseData) => {\r\n    const expenseData = {\r\n      ...newExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.saveNewExpense(expenseData)\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return(\r\n    <Card className='new-expense'>\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense </button>\r\n        )}\r\n        {isEditing && (\r\n          <ExpenseForm\r\n            onSaveExpenseData = {savingExpenseDataHandler}\r\n            onCancel = {stopEditingHandler}\r\n          />\r\n        )}\r\n    \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NewExpense; ","import { useState } from \"react\";\nimport Expenses from \"./component/components/Expenses\";\nimport NewExpense from \"./component/NewExpense/NewExpense\";\n\nconst dummy_data = [\n  {\n    id: 'e1',\n    title: 'Eyeliner',\n    amount: 94,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'Desk',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expense,setExpense] = useState(dummy_data)\n  const addingNewExpenseHandler = (newExpense) =>{\n    setExpense((prevExpense) => {\n      return [newExpense,...prevExpense];\n    }\n    )};\n  return (\n    <div>\n      <NewExpense saveNewExpense = {addingNewExpenseHandler}/>\n      <Expenses dummyItems={expense}/>\n    </div>\n  );\n}\n\nexport default App;\n\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}